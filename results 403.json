[
  {
    "markdown": "![](https://homes.cs.washington.edu/~rjust/header.jpg)\n\n# Software Engineering (CSE 403/Spring 2025)\n\n* * *\n\nSoftware engineering goes well beyond programming. It includes processes\nfrom defining a product to shipping and maintaining that product.\nSoftware engineering requires strong technical skills, but also strong\nteamwork and communication skills. Get ready to learn software engineering\nprinciples first hand, improve your technical skills, and ship a product.\n\n### Meetings\n\n- Lectures: Mon/Wed/Fri 12:30pm--1:20pm (G10)\n\n- Team meetings: Tue 1:30pm--2:20pm (G10)\n\n- Project meetings: Thu 1:30pm--2:20pm (G10)\n\n\n### Staff\n\n**Please send all general inquiries to cse403-staff(at)cs.washington.edu**\n\n- Instructor: Ren√© Just (rjust(at)cs.washington.edu; OH: after class and by appointment)\n- TA: Afuza Afuzarahman (afuza(at)cs.washington.edu; OH: by appointment)\n- TA: Arnavi Mahendra Chheda (chheda(at)cs.washington.edu; OH: by appointment)\n- TA: Medha Gupta (medhag2(at)cs.washington.edu; OH: by appointment)\n- TA: Melanie Kneitmix (mekne(at)cs.washington.edu; OH: by appointment)\n- TA: Connor Nicholas Reinholdtsen (creinh(at)cs.washington.edu; OH: by appointment)\n- TA: David Song (davsong(at)cs.washington.edu; OH: by appointment)\n\n### Communication\n\n- [Canvas](https://canvas.uw.edu/courses/1798606)\n- [Slack workspace](https://cse403-sp25.slack.com/)\n- [CSE 403 Slack policies](https://homes.cs.washington.edu/~rjust/courses/CSE403/project/slack_rules.html)\n( [markdown](https://homes.cs.washington.edu/~rjust/courses/CSE403/project/slack_rules.md))\n\n- [Project meetings](https://homes.cs.washington.edu/~rjust/courses/CSE403/project/project.html)\n( [markdown](https://homes.cs.washington.edu/~rjust/courses/CSE403/project/project.md))\n\n\n### Course project\n\n- [Overview](https://homes.cs.washington.edu/~rjust/courses/CSE403/project/project.html)\n( [markdown](https://homes.cs.washington.edu/~rjust/courses/CSE403/project/project.md))\n\n\n* * *\n\n## Syllabus\n\n### Course description\n\nIn this course, students learn and gain practical experience\nwith software engineering principles, techniques, and tools.\n\nTopics in this course include requirements analysis, specification, design,\nabstraction, programming style, testing, maintenance, communication, teamwork,\nand software project management.\n\nThe practical experience centers on a quarter-long team project,\nin which a software development project is carried through\nall the stages of the software life cycle.\nParticular emphasis is placed on communication skills and on developing\nmaintainable software.\n\nIn-class activities further provide a hands-on experience in using\nstate-of-the-art techniques and tools.\n\n### Prerequisites\n\n- CSE 331\n- CSE 332\n\n### Course format\n\nThe class meets three times a week for lectures. Additionally, individual groups\nmeet twice a week during section (Tuesday and Thursday) for team and project\nmeetings.\n\nAll class meetings are in-person. Classroom material is enhanced with\nassigned readings, in-class activities, and in-class exercises.\n\nA major component of the course is teamwork on a\n[group project](https://homes.cs.washington.edu/~rjust/courses/CSE403/project/project.html).\nIndividual contributions include reading assignments, peer review, and participation.\n\n### Grading\n\nGrades will be based on a group project, in-class exercises, assignments, and\nparticipation:\n\n- 55%: Group project (project milestones: 70%; final project review: 30%)\n- 35%: In-class exercises and assignments\n- 10%: Participation\n\n### Late policy\n\nAssignments must be submitted on Canvas by the due date and time. Unless\notherwise noted, all times are given in PDT (Pacific Time). The submission site\nremains open for 24 hours after the deadline. Assignments submitted within 24\nhours after the deadline will incur a 20% penalty. Assignments will not be\naccepted after the submission site is closed.\n\nYou can find the general course policies\n[here](https://homes.cs.washington.edu/~rjust/courses/policies.html).\n\n* * *\n\n## Course material\n\nCSE 403\n\n| Date | Topic | Materials | Readings | Assignments |\n| * * * |\n| 03/31 | Introduction | - [Slides](https://homes.cs.washington.edu/~rjust/courses/CSE403/2025_03_31.pdf) [(4 pages)](https://homes.cs.washington.edu/~rjust/courses/CSE403/2025_03_31-4pages.pdf) |  |  |\n| 04/01 | Project proposal work |  |  |  |\n| 04/02 | The Joel Test | - [Slides](https://homes.cs.washington.edu/~rjust/courses/CSE403/2025_04_02.pdf) [(4 pages)](https://homes.cs.washington.edu/~rjust/courses/CSE403/2025_04_02-4pages.pdf) | - [Joel Test](https://www.joelonsoftware.com/2000/08/09/the-joel-test-12-steps-to-better-code/)<br>- [Joel Test: 20 years later](https://dev.to/checkgit/the-joel-test-20-years-later-1kjk/) | [Project proposal](https://homes.cs.washington.edu/~rjust/courses/CSE403/project/01_proposal.html) (due 04/08) |\n| 04/03 | Project proposal work |  |  |  |\n| 04/04 | Software development life cycle | - [Slides](https://homes.cs.washington.edu/~rjust/courses/CSE403/2025_04_04.pdf) [(4 pages)](https://homes.cs.washington.edu/~rjust/courses/CSE403/2025_04_04-4pages.pdf) | - [What is Agile?](https://www.agilealliance.org/agile101/)<br>- [Agile vs. traditional](https://en.wikipedia.org/wiki/Agile_software_development#Philosophy)<br>- [Test-driven development](https://www.agilealliance.org/glossary/tdd/) |  |\n| * * * |\n| 04/07 | Teams and Scrum |  |  |  |\n| 04/08 | Project proposal work |  |  |  |\n| 04/09 | Proposal pitches |  |  | [Team setup](https://homes.cs.washington.edu/~rjust/courses/CSE403/project/02_team.html) (due 04/15) |\n| 04/10 | Proposal pitches |  |  |  |\n| 04/11 | Proposal pitches |  |  |  |\n| * * * |\n| 04/14 | Requirements |  |  |  |\n| 04/15 | Team meeting |  |  |  |\n| 04/16 | Requirements |  |  | [Requirements](https://homes.cs.washington.edu/~rjust/courses/CSE403/project/03_requirements.html) (due 04/22) |\n| 04/17 | Project meeting |  |  |  |\n| 04/18 | Data modelling |  |  |  |\n| * * * |\n| 04/21 | Architecture |  |  |  |\n| 04/22 | Team meeting |  |  |  |\n| 04/23 | Design |  |  | [Architecture & Design](https://homes.cs.washington.edu/~rjust/courses/CSE403/project/04_design.html) (due 04/29) |\n| 04/24 | Project meeting |  |  |  |\n| 04/25 | Version control and Git |  |  |  |\n| * * * |\n| 04/28 | Build systems |  |  |  |\n| 04/29 | Team meeting |  |  |  |\n| 04/30 | Testing and CI |  |  | [Testing & CI](https://homes.cs.washington.edu/~rjust/courses/CSE403/project/05_ci_testing.html) (due 05/06) |\n| 05/01 | Project meeting |  |  |  |\n| 05/02 | In-class exercise (Git) |  |  |  |\n| * * * |\n| 05/05 | Coverage-based testing |  |  |  |\n| 05/06 | Team meeting |  |  |  |\n| 05/07 | Mutation-based testing |  |  | [Beta Release](https://homes.cs.washington.edu/~rjust/courses/CSE403/project/06_beta_release.html) (due 05/13) |\n| 05/08 | Project meeting |  |  |  |\n| 05/09 | In-class exercise (Code defenders) |  |  |  |\n| * * * |\n| 05/12 | **_Hack day_** |  |  |  |\n| 05/13 | Team meeting |  |  |  |\n| 05/14 | Code review |  |  | [Refinement](https://homes.cs.washington.edu/~rjust/courses/CSE403/project/07_documentation.html) (due 05/20) |\n| 05/15 | Project meeting |  |  |  |\n| 05/16 | In-class exercise (Testing) |  |  |  |\n| * * * |\n| 05/19 | Program analysis |  |  |  |\n| 05/20 | Team meeting |  |  |  |\n| 05/21 | Debugging |  |  | [Peer Review](https://homes.cs.washington.edu/~rjust/courses/CSE403/project/08_peer_review.html) (due 05/27) |\n| 05/22 | Project meeting |  |  |  |\n| 05/23 | In-class exercise (Debugging) |  |  |  |\n| * * * |\n| 05/26 | **_No class (holiday)_** |  |  |  |\n| 05/27 | Team meeting |  |  |  |\n| 05/28 | Fault localization |  |  | [Final Release](https://homes.cs.washington.edu/~rjust/courses/CSE403/project/09_final_release.html) (due 06/03) |\n| 05/29 | Project meeting |  |  |  |\n| 05/30 | In-class exercise (Fault localization) |  |  |  |\n| * * * |\n| 06/02 | **_Hack day_** |  |  |  |\n| 06/03 | Team meeting |  |  |  |\n| 06/04 | Advanced program analysis |  |  | [Individual reflection](https://homes.cs.washington.edu/~rjust/courses/CSE403/project/10_reflection.html) (due 06/10) |\n| 06/05 | Project meeting |  |  |  |\n| 06/06 | Optional in-class exercise |  |  |  |\n\n* * *",
    "metadata": {
      "language": "en",
      "title": "CSE 403",
      "viewport": [
        "width=device-width, initial-scale=1",
        "width=device-width, initial-scale=1"
      ],
      "scrapeId": "7509251b-287b-4233-baa8-504c8931cd11",
      "sourceURL": "https://homes.cs.washington.edu/~rjust/courses/CSE403/index.html",
      "url": "https://homes.cs.washington.edu/~rjust/courses/CSE403/index.html",
      "statusCode": 200
    },
    "links": [
      "https://canvas.uw.edu/courses/1798606",
      "https://cse403-sp25.slack.com/",
      "https://homes.cs.washington.edu/~rjust/courses/CSE403/project/slack_rules.html",
      "https://homes.cs.washington.edu/~rjust/courses/CSE403/project/slack_rules.md",
      "https://homes.cs.washington.edu/~rjust/courses/CSE403/project/project.html",
      "https://homes.cs.washington.edu/~rjust/courses/CSE403/project/project.md",
      "https://homes.cs.washington.edu/~rjust/courses/policies.html",
      "https://homes.cs.washington.edu/~rjust/courses/CSE403/2025_03_31.pdf",
      "https://homes.cs.washington.edu/~rjust/courses/CSE403/2025_03_31-4pages.pdf",
      "https://homes.cs.washington.edu/~rjust/courses/CSE403/2025_04_02.pdf",
      "https://homes.cs.washington.edu/~rjust/courses/CSE403/2025_04_02-4pages.pdf",
      "https://www.joelonsoftware.com/2000/08/09/the-joel-test-12-steps-to-better-code/",
      "https://dev.to/checkgit/the-joel-test-20-years-later-1kjk/",
      "https://homes.cs.washington.edu/~rjust/courses/CSE403/project/01_proposal.html",
      "https://homes.cs.washington.edu/~rjust/courses/CSE403/2025_04_04.pdf",
      "https://homes.cs.washington.edu/~rjust/courses/CSE403/2025_04_04-4pages.pdf",
      "https://www.agilealliance.org/agile101/",
      "https://en.wikipedia.org/wiki/Agile_software_development#Philosophy",
      "https://www.agilealliance.org/glossary/tdd/",
      "https://homes.cs.washington.edu/~rjust/courses/CSE403/project/02_team.html",
      "https://homes.cs.washington.edu/~rjust/courses/CSE403/project/03_requirements.html",
      "https://homes.cs.washington.edu/~rjust/courses/CSE403/project/04_design.html",
      "https://homes.cs.washington.edu/~rjust/courses/CSE403/project/05_ci_testing.html",
      "https://homes.cs.washington.edu/~rjust/courses/CSE403/project/06_beta_release.html",
      "https://homes.cs.washington.edu/~rjust/courses/CSE403/project/07_documentation.html",
      "https://homes.cs.washington.edu/~rjust/courses/CSE403/project/08_peer_review.html",
      "https://homes.cs.washington.edu/~rjust/courses/CSE403/project/09_final_release.html",
      "https://homes.cs.washington.edu/~rjust/courses/CSE403/project/10_reflection.html"
    ],
    "scrape_id": "7509251b-287b-4233-baa8-504c8931cd11"
  }
]