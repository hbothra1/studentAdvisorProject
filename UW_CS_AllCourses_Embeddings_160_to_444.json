{
  "CSE391": [
    "Course Description: This 1-credit course builds a foundation in essential command-line and software tools...",
    "Learning Goals:\n\n- Use Unix shell commands\n- Utilize Git for version control",
    "Topics Covered:\n\n- Shell basics\n- Git workflows",
    "Tools Taught:\n\n- Unix shell\n- Git"
  ],
  "CSE444": [
    "Course Description: CSE 444 introduces the foundations of database management systems...",
    "Learning Goals:\n\n- Design normalized schemas\n- Write optimized SQL queries",
    "Topics Covered:\n\n- Relational model\n- SQL\n- Normalization\n- Transactions",
    "Tools Taught:\n\n- SQL\n- XQuery"
  ],
  "CSE160": [
    "Course Description: CSE 160 introduces Python programming for solving real-world data problems. It is designed for beginners with no prior experience.",
    "Learning Goals:\n\n- Write Python programs for data\n- Apply loops and logic\n- Use lists, files, and debugging",
    "Topics Covered:\n\n- Python basics\n- Control flow\n- Functions\n- File I/O\n- Visualization",
    "Tools Taught:\n\n- Python\n- Gradescope\n- Terminal"
  ],
  "CSE163": [
    "Course Description: CSE 163 teaches intermediate Python and data science techniques using real datasets from diverse domains.",
    "Learning Goals:\n\n- Manipulate and visualize data\n- Build and debug ML models\n- Explore geospatial and CV data",
    "Topics Covered:\n\n- Pandas\n- Seaborn\n- Scikit-learn\n- GeoPandas\n- Language models",
    "Tools Taught:\n\n- Python\n- Jupyter\n- Scikit-learn\n- GeoPandas"
  ],
  "CSE312": [
    "Course Description: CSE 312 covers foundational probability and statistics with practical applications in computer science.",
    "Learning Goals:\n\n- Apply distributions and CLT\n- Model uncertainty\n- Simulate processes in Python",
    "Topics Covered:\n\n- Combinatorics\n- Random variables\n- Bayes\u2019 theorem\n- Hypothesis testing",
    "Tools Taught:\n\n- Python\n- Gradescope"
  ],
  "CSE331": [
    "Course Description: CSE 331 teaches software design practices including modular reasoning, defensive programming, and architectural planning.",
    "Learning Goals:\n\n- Write modular, correct code\n- Apply defensive programming\n- Design full-stack web systems",
    "Topics Covered:\n\n- Specifications\n- MVC\n- Debugging\n- Architecture patterns",
    "Tools Taught:\n\n- Java (reference)\n- Gradescope"
  ],
  "CSE332": [
    "Course Description: CSE 332 teaches abstract data types, algorithms, and parallelism for scalable programming in Java.",
    "Learning Goals:\n\n- Implement high-performance data structures\n- Analyze graph and sorting algorithms\n- Use Java concurrency",
    "Topics Covered:\n\n- Balanced trees\n- Hashing\n- Graphs\n- Parallel sorting\n- NP-completeness",
    "Tools Taught:\n\n- Java\n- IntelliJ"
  ],
  "CSE340": [
    "Course Description: CSE 340 teaches front-end web and mobile development through Flutter and Dart, with an emphasis on accessibility and design feedback.",
    "Learning Goals:\n\n- Build mobile UIs with Flutter\n- Apply accessibility standards\n- Use MVC and observer patterns",
    "Topics Covered:\n\n- Adaptive UI\n- Component design\n- Reactive programming\n- Peer interface critique",
    "Tools Taught:\n\n- Flutter\n- Dart\n- GitLab"
  ],
  "CSE344": [
    "Course Description: CSE 344 introduces relational data management, covering schemas, queries, transactions, and system internals for relational databases.",
    "Learning Goals:\n\n- Design normalized schemas\n- Write optimized SQL queries\n- Understand transactions and query processing",
    "Topics Covered:\n\n- Relational model\n- SQL\n- Normalization\n- Transactions\n- Query tuning",
    "Tools Taught:\n\n- SQL\n- XQuery"
  ],
  "CSE351": [
    "Course Description: CSE 351 connects software to hardware through the study of assembly, memory, and OS-level execution.",
    "Learning Goals:\n\n- Understand assembly and C internals\n- Manipulate memory directly\n- Debug using command-line tools",
    "Topics Covered:\n\n- x86-64 assembly\n- Memory layout\n- Heap/stack\n- Caches\n- Virtual memory",
    "Tools Taught:\n\n- C\n- gdb\n- Linux"
  ],
  "CSE369": [
    "Course Description: This course introduces foundational digital logic concepts through simulation and implementation using SystemVerilog and FPGA tools.",
    "Learning Goals:\n\n- Design combinational/sequential circuits\n- Simulate hardware using SystemVerilog\n- Implement designs on FPGA boards",
    "Topics Covered:\n\n- Boolean algebra\n- Karnaugh maps\n- Flip-flops\n- FSMs\n- Routing\n- Timing analysis",
    "Tools Taught:\n\n- SystemVerilog\n- Quartus\n- DE1-SoC FPGA"
  ],
  "CSE390Z": [
    "Course Description: CSE 390Z is a collaborative academic support course designed for students enrolled in CSE 311, focused on strengthening theoretical CS foundations through discussion and practice.",
    "Learning Goals:\n\n- Reinforce discrete math concepts\n- Collaborative problem-solving\n- Reflective and metacognitive strategies",
    "Topics Covered:\n\n- Propositional logic\n- Sets\n- Functions\n- Induction\n- Counting\n- Graph theory",
    "Tools Taught:\n\n- Ed Discussion"
  ],
  "CSE422": [
    "Course Description: CSE 422 teaches modern algorithmic techniques for large-scale and noisy data, emphasizing links to learning theory and statistics.",
    "Learning Goals:\n\n- Implement modern algorithms for data processing\n- Understand approximation and streaming techniques\n- Analyze algorithms using theoretical tools from ML and statistics",
    "Topics Covered:\n\n- Count-min sketch\n- LSH\n- VC-dimension\n- Regularization\n- PCA\n- SVD\n- Spectral clustering",
    "Tools Taught:\n\n- Python\n- SciPy\n- Scientific papers"
  ],
  "CSE426": [
    "Course Description: CSE 426 introduces core principles of modern cryptography, including block ciphers, secure communication, and zero-knowledge proofs.",
    "Learning Goals:\n\n- Design secure cryptographic schemes\n- Use reduction-based proofs to argue about security\n- Explore advanced topics like secure computation and zero-knowledge",
    "Topics Covered:\n\n- Symmetric encryption\n- Semantic security\n- MACs\n- Hash functions\n- Digital signatures\n- Zero-knowledge proofs\n- Homomorphic encryption",
    "Tools Taught:\n\n- Gradescope\n- Edstem\n- LaTeX" 
  ],
  "CSE427": [
    "Course Description: CSE 427 provides an introduction to computational biology without requiring programming. It focuses on biological questions and computational strategies.",
    "Learning Goals:\n\n- Analyze algorithms used in bioinformatics\n- Interpret graphs and biological models\n- Critique scientific literature in computational biology",
    "Topics Covered:\n\n- Sequence alignment\n- Protein function prediction\n- Biomedical graph analysis\n- Genomics\n- Generative AI for biology",
    "Tools Taught:\n\n- Bioinformatics datasets\n- Scientific literature\n- Ed Discussion"
  ],
  "CSE428": [
    "Course Description: CSE 428 is a capstone focused on applying large language models (LLMs) to biomedical challenges. Students independently design, implement, and evaluate research-level projects.",
    "Learning Goals:\n\n- Identify biomedical problems solvable with LLMs\n- Design and implement LLM-based projects\n- Critique and present biomedical NLP research",
    "Topics Covered:\n\n- Prompt engineering\n- Zero-shot classification\n- Benchmark evaluation\n- Biomedical NLP",
    "Tools Taught:\n\n- ChatGPT\n- BioGPT\n- Jupyter\n- PubMed datasets"
  ],
  "CSE431": [
    "Course Description: CSE 431 explores fundamental questions in theoretical computer science, including what can be computed and how efficiently.",
    "Learning Goals:\n\n- Design and analyze abstract computational models\n- Prove decidability/undecidability via reductions\n- Understand complexity classes like NP and PSPACE",
    "Topics Covered:\n\n- Turing machines\n- Undecidability\n- NP-completeness\n- PSPACE\n- Context-free grammars",
    "Tools Taught:\n\n- Canvas\n- LaTeX"
  ],
  "CSE440": [
    "Course Description: CSE 440 introduces the process of human-centered design. Students explore need finding, prototyping, and evaluation for real-world problems.",
    "Learning Goals:\n\n- Conduct user research and contextual inquiry\n- Design and prototype user-centered interfaces\n- Evaluate designs through usability testing",
    "Topics Covered:\n\n- Problem framing\n- Storyboarding\n- Low-fidelity and high-fidelity prototyping\n- Heuristic evaluation\n- UX feedback and iteration",
    "Tools Taught:\n\n- Figma\n- Miro\n- Usability testing platforms"
  ],
  "CSE442": [
    "Course Description: CSE 442 introduces data visualization principles and techniques, covering the full pipeline from raw data to interactive dashboards.",
    "Learning Goals:\n\n- Design effective visual encodings\n- Evaluate and justify visualization choices\n- Implement interactive visualizations in code",
    "Topics Covered:\n\n- Perception and encoding\n- Charts and dashboards\n- Data wrangling\n- Interaction design\n- Evaluation frameworks",
    "Tools Taught:\n\n- Altair\n- Pandas\n- D3.js\n- Jupyter Notebooks"
  ]
}